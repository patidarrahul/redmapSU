# Generated by Django 5.0.6 on 2024-06-19 17:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '1.Categories',
            },
        ),
        migrations.CreateModel(
            name='DryingProgramStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
                ('temperature', models.FloatField()),
                ('order', models.IntegerField(default=1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Drying Steps',
            },
        ),
        migrations.CreateModel(
            name='DryingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('steps', models.ManyToManyField(to='app.dryingprogramstep')),
            ],
            options={
                'verbose_name_plural': 'Drying Programs',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.CharField(max_length=200)),
                ('number_of_variables', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField()),
                ('created', models.DateTimeField()),
                ('serial_number', models.IntegerField(blank=True, null=True)),
                ('data_dir', models.CharField(blank=True, max_length=1000, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Experiments',
                'ordering': ['-serial_number'],
            },
        ),
        migrations.CreateModel(
            name='ExperimentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stacks', models.BooleanField(default=False)),
                ('layers', models.BooleanField(default=False)),
                ('coating_parameters', models.BooleanField(default=False)),
                ('formulations', models.BooleanField(default=False)),
                ('experiment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Formulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('atmosphere', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '8.Formulations',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Infiltration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('precursor_temperature', models.FloatField(blank=True, null=True)),
                ('cover', models.BooleanField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Infiltration',
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('short_name', models.CharField(max_length=10, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '3.Measurmemt Units',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Solid', 'Solid'), ('Liquid', 'Liquid'), ('Gas', 'Gas')], max_length=20)),
                ('batch', models.CharField(max_length=100)),
                ('arrival_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('total_units', models.IntegerField()),
                ('unit_size', models.FloatField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.category')),
                ('measurement_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.measurementunit')),
            ],
            options={
                'verbose_name_plural': '4.Inventory',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='FormulationComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.formulation')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.inventory')),
                ('measurement_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.measurementunit')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('collaborators', models.ManyToManyField(related_name='collaborators', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Projects',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.project'),
        ),
        migrations.CreateModel(
            name='ScreenPrinting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Screen Printing',
            },
        ),
        migrations.CreateModel(
            name='SpinCoating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('antisolvent_used', models.BooleanField(default=False)),
                ('antisolvent_volume', models.FloatField(blank=True, null=True)),
                ('antisolvent_drop_time', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('antisolvent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.inventory')),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Spin Coating',
            },
        ),
        migrations.CreateModel(
            name='CoatingParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('infilteration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.infiltration')),
                ('screen_printing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.screenprinting')),
                ('spin_coating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.spincoating')),
            ],
            options={
                'verbose_name_plural': 'Coating Parameters',
            },
        ),
        migrations.CreateModel(
            name='SpinStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spin_speed', models.IntegerField()),
                ('spin_acceleration', models.IntegerField()),
                ('spin_time', models.IntegerField()),
                ('order', models.IntegerField(default=1)),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '9.Spin Steps',
            },
        ),
        migrations.AddField(
            model_name='spincoating',
            name='steps',
            field=models.ManyToManyField(to='app.spinstep'),
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('geometry', models.CharField(choices=[('N-I-P', 'N-I-P'), ('P-I-N', 'P-I-N'), ('Power-Roll', 'Power-Roll'), ('Other', 'Other')], max_length=100)),
                ('number_of_layers', models.IntegerField(default=0)),
                ('number_of_devices', models.IntegerField(default=0)),
                ('jv_dir', models.CharField(blank=True, max_length=1000, null=True)),
                ('hero_device_jv_dir', models.CharField(blank=True, max_length=1000, null=True)),
                ('hero_device_pce', models.FloatField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.experiment')),
                ('substrate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.inventory')),
            ],
            options={
                'verbose_name_plural': '5.Stacks',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sequence', models.IntegerField()),
                ('layer_type', models.CharField(choices=[('ETL', 'ETL'), ('Active Layer', 'Active Layer'), ('HTL', 'HTL'), ('Top Contact', 'Top Contact'), ('Other', 'Other')], max_length=100)),
                ('formulation_volume', models.FloatField(blank=True, null=True)),
                ('atmosphere', models.CharField(blank=True, choices=[('N2', 'N2'), ('Air', 'Air'), ('Other', 'Other')], max_length=50, null=True)),
                ('room_temperature', models.IntegerField(blank=True, null=True)),
                ('room_humidity', models.IntegerField(blank=True, null=True)),
                ('drying_type', models.CharField(blank=True, choices=[('Hot Plate', 'Hot Plate'), ('Covection Oven', 'Covection Oven'), ('Other', 'Other')], max_length=50, null=True)),
                ('dry_film_thickness', models.FloatField(blank=True, null=True)),
                ('coating_method', models.CharField(choices=[('Spin Coating', 'Spin Coating'), ('Thermal Evaporation', 'Thermal Evaporation'), ('Screen Printing', 'Screen Printing'), ('Infilteration', 'Infilteration')], max_length=100)),
                ('created', models.DateTimeField()),
                ('treatment', models.CharField(blank=True, choices=[('UV-Ozone', 'UV-Ozone'), ('Plasma', 'Plasma'), ('Corona', 'Corona'), ('Other', 'Other')], max_length=100, null=True)),
                ('treatment_time', models.IntegerField(blank=True, null=True)),
                ('treatment_power', models.IntegerField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('coating_parameters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.coatingparameters')),
                ('drying_program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.dryingprogram')),
                ('formulation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.formulation')),
                ('stack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.stack')),
            ],
            options={
                'verbose_name_plural': '6.Layers',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '2.Suppliers',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.supplier'),
        ),
        migrations.CreateModel(
            name='ThermalEvaporation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Thermal Evaporation',
            },
        ),
        migrations.AddField(
            model_name='coatingparameters',
            name='thermal_evaporation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.thermalevaporation'),
        ),
        migrations.CreateModel(
            name='ThermalEvaporationStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField()),
                ('time', models.IntegerField()),
                ('order', models.IntegerField(default=1)),
                ('author', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '10.Thermal Evaporation Steps',
            },
        ),
        migrations.AddField(
            model_name='thermalevaporation',
            name='steps',
            field=models.ManyToManyField(to='app.thermalevaporationstep'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('user_dir', models.CharField(blank=True, max_length=1000, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
